{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"\u4e3b\u9875"},{"location":"samples/","text":"\u4f8b\u7a0b \u5e8f\u5217\u5316\u5bf9\u8c61\u5230Json\u5b57\u7b26\u4e32 public class Account { public string Email { get; set; } public bool Active { get; set; } public DateTime CreatedDate { get; set; } public IList<string> Roles { get; set; } } Account account = new Account { Email = \"james@example.com\", Active = true, CreatedDate = new DateTime (2013, 1, 20, 0, 0, 0, DateTimeKind.Utc), Roles = new List<string> () { \"User\", \"Admin\" } }; //\u53c2\u6570\u4e8c\u4e3a\u662f\u5426\u538b\u7f29Json\u5b57\u7b26\u4e32 string json = JsonConvert.Serialize (account, false); //{ // \"Email\": \"james@example.com\", // \"Active\": true, // \"CreatedDate\": \"2013-01-20T00:00:00Z\", // \"Roles\": [ // \"User\", // \"Admin\" // ] //} Console.WriteLine (json); \u5e8f\u5217\u5316\u5bf9\u8c61\u5230Json\u6587\u672c\u6587\u4ef6 public class Movie { public string Name { get; set; } public int Year { get; set; } } Movie movie = new Movie { Name = \"Bad Boys\", Year = 1995 }; string path = @\"d:\\movie.json\"; //\u5e8f\u5217\u5316\u5bf9\u8c61\u4e3aJson\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5199\u5230\u6587\u672c\u6587\u4ef6 File.WriteAllText (path, JsonConvert.Serialize (movie)); //\u4ee5\u6d41\u7684\u65b9\u5f0f\u5e8f\u5217\u5316\u5bf9\u8c61\u5230Json\u6587\u672c\u6587\u4ef6 using (StreamWriter file = File.CreateText (path)) { JsonConvert.Serialize (movie, file); } \u53cd\u5e8f\u5217\u5316Json\u5b57\u7b26\u4e32\u5230\u5bf9\u8c61 public class Account { public string Email { get; set; } public bool Active { get; set; } public DateTime CreatedDate { get; set; } public IList<string> Roles { get; set; } } string json = @\"{ 'Email': 'james@example.com', 'Active': true, 'CreatedDate': '2013-01-20T00:00:00Z', 'Roles': [ 'User', 'Admin' ] }\"; Account account = JsonConvert.Deserialize<Account> (json); Console.WriteLine (account.Email); //james@example.com \u53cd\u5e8f\u5217\u5316Json\u6587\u672c\u6587\u4ef6\u5230\u5bf9\u8c61 public class Movie { public string Name { get; set; } public int Year { get; set; } } string path = @\"d:\\movie.json\"; //\u8bfb\u5165Json\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u53cd\u5e8f\u5217\u5316Json\u5b57\u7b26\u4e32\u5230\u5bf9\u8c61 Movie movie = JsonConvert.Deserialize<Movie> (File.ReadAllText (path)); //\u4ee5\u6d41\u7684\u65b9\u5f0f\u4eceJson\u6587\u672c\u6587\u4ef6\u53cd\u5e8f\u5217\u5316\u5230\u5bf9\u8c61 using (StreamReader file = File.OpenText (path)) { Movie movie2 = JsonConvert.Deserialize<Movie> (file); } \u4f7f\u7528JsonObject.Parse\u89e3\u6790Json\u5b57\u7b26\u4e32 string json = @\"{ 'CPU': 'Intel', 'Drives': [ 'DVD read/writer', '500 gigabyte hard drive' ] }\"; JsonObject jsonObject = JsonObject.Parse (json); Console.WriteLine (jsonObject.Serialize (false)); //{ // \"CPU\": \"Intel\", // \"Drives\": [ // \"DVD read/writer\", // \"500 gigabyte hard drive\" // ] //} Null\u503c\u5904\u7406 public class Person { public string Name { get; set; } public int Age { get; set; } public Person Partner { get; set; } public decimal? Salary { get; set; } } Person person = new Person { Name = \"Nigal Newborn\", Age = 1 }; string jsonIncludeNullValues = JsonConvert.Serialize (person, false); Console.WriteLine (jsonIncludeNullValues); //{ // \"Name\": \"Nigal Newborn\", // \"Age\": 1, // \"Partner\": null, // \"Salary\": null //} string jsonIgnoreNullValues = JsonConvert.Serialize (person, false, new JsonConfig { IgnoreNull = true }); Console.WriteLine (jsonIgnoreNullValues); //{ // \"Name\": \"Nigal Newborn\", // \"Age\": 1 //}","title":"\u4f8b\u7a0b"},{"location":"samples/#_1","text":"","title":"\u4f8b\u7a0b"},{"location":"samples/#json","text":"public class Account { public string Email { get; set; } public bool Active { get; set; } public DateTime CreatedDate { get; set; } public IList<string> Roles { get; set; } } Account account = new Account { Email = \"james@example.com\", Active = true, CreatedDate = new DateTime (2013, 1, 20, 0, 0, 0, DateTimeKind.Utc), Roles = new List<string> () { \"User\", \"Admin\" } }; //\u53c2\u6570\u4e8c\u4e3a\u662f\u5426\u538b\u7f29Json\u5b57\u7b26\u4e32 string json = JsonConvert.Serialize (account, false); //{ // \"Email\": \"james@example.com\", // \"Active\": true, // \"CreatedDate\": \"2013-01-20T00:00:00Z\", // \"Roles\": [ // \"User\", // \"Admin\" // ] //} Console.WriteLine (json);","title":"\u5e8f\u5217\u5316\u5bf9\u8c61\u5230Json\u5b57\u7b26\u4e32"},{"location":"samples/#json_1","text":"public class Movie { public string Name { get; set; } public int Year { get; set; } } Movie movie = new Movie { Name = \"Bad Boys\", Year = 1995 }; string path = @\"d:\\movie.json\"; //\u5e8f\u5217\u5316\u5bf9\u8c61\u4e3aJson\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5199\u5230\u6587\u672c\u6587\u4ef6 File.WriteAllText (path, JsonConvert.Serialize (movie)); //\u4ee5\u6d41\u7684\u65b9\u5f0f\u5e8f\u5217\u5316\u5bf9\u8c61\u5230Json\u6587\u672c\u6587\u4ef6 using (StreamWriter file = File.CreateText (path)) { JsonConvert.Serialize (movie, file); }","title":"\u5e8f\u5217\u5316\u5bf9\u8c61\u5230Json\u6587\u672c\u6587\u4ef6"},{"location":"samples/#json_2","text":"public class Account { public string Email { get; set; } public bool Active { get; set; } public DateTime CreatedDate { get; set; } public IList<string> Roles { get; set; } } string json = @\"{ 'Email': 'james@example.com', 'Active': true, 'CreatedDate': '2013-01-20T00:00:00Z', 'Roles': [ 'User', 'Admin' ] }\"; Account account = JsonConvert.Deserialize<Account> (json); Console.WriteLine (account.Email); //james@example.com","title":"\u53cd\u5e8f\u5217\u5316Json\u5b57\u7b26\u4e32\u5230\u5bf9\u8c61"},{"location":"samples/#json_3","text":"public class Movie { public string Name { get; set; } public int Year { get; set; } } string path = @\"d:\\movie.json\"; //\u8bfb\u5165Json\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u53cd\u5e8f\u5217\u5316Json\u5b57\u7b26\u4e32\u5230\u5bf9\u8c61 Movie movie = JsonConvert.Deserialize<Movie> (File.ReadAllText (path)); //\u4ee5\u6d41\u7684\u65b9\u5f0f\u4eceJson\u6587\u672c\u6587\u4ef6\u53cd\u5e8f\u5217\u5316\u5230\u5bf9\u8c61 using (StreamReader file = File.OpenText (path)) { Movie movie2 = JsonConvert.Deserialize<Movie> (file); }","title":"\u53cd\u5e8f\u5217\u5316Json\u6587\u672c\u6587\u4ef6\u5230\u5bf9\u8c61"},{"location":"samples/#jsonobjectparsejson","text":"string json = @\"{ 'CPU': 'Intel', 'Drives': [ 'DVD read/writer', '500 gigabyte hard drive' ] }\"; JsonObject jsonObject = JsonObject.Parse (json); Console.WriteLine (jsonObject.Serialize (false)); //{ // \"CPU\": \"Intel\", // \"Drives\": [ // \"DVD read/writer\", // \"500 gigabyte hard drive\" // ] //}","title":"\u4f7f\u7528JsonObject.Parse\u89e3\u6790Json\u5b57\u7b26\u4e32"},{"location":"samples/#null","text":"public class Person { public string Name { get; set; } public int Age { get; set; } public Person Partner { get; set; } public decimal? Salary { get; set; } } Person person = new Person { Name = \"Nigal Newborn\", Age = 1 }; string jsonIncludeNullValues = JsonConvert.Serialize (person, false); Console.WriteLine (jsonIncludeNullValues); //{ // \"Name\": \"Nigal Newborn\", // \"Age\": 1, // \"Partner\": null, // \"Salary\": null //} string jsonIgnoreNullValues = JsonConvert.Serialize (person, false, new JsonConfig { IgnoreNull = true }); Console.WriteLine (jsonIgnoreNullValues); //{ // \"Name\": \"Nigal Newborn\", // \"Age\": 1 //}","title":"Null\u503c\u5904\u7406"}]}